#!/usr/bin/env python

import MetagenomeDB as mdb
import optparse, sys

p = optparse.OptionParser()

p.add_option("-p", "--prefix", dest = "prefix", metavar = "STRING")

(p, a) = p.parse_args()

def error (msg):
	print >>sys.stderr, "ERROR: %s." % msg
	sys.exit(1)

if (not p.prefix):
	error("A prefix must be provided")

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

Nodes = {}
Edges = {}

def order (a, b):
	if (a > b):
		return (b, a)
	else:
		return (a, b)

sif_fh = open("%s.sif" % p.prefix, 'w')

for relationship in mdb.Relationship.list():
	source, target = relationship["source"], relationship["target"]

	Nodes[source] = True
	Nodes[target] = True

	key = order(source.id(), target.id())
	if (key in Edges):
		continue

	print >>sif_fh, "%s:%s	%s	%s:%s" % (
		source.__class__.__name__, source.id(),
		relationship["relationship"],
		target.__class__.__name__, target.id()
	)

	Edges[key] = True

print "%s nodes, %s edges" % (len(Nodes), len(Edges))

sif_fh.close()
	
